metadata={systemName:"stringutilities.javascriptbroker.k2nexus",displayName:"String Utilities Javascript Broker",description:"A JSSP based string utilities for K2 Nexus."},ondescribe=async function({configuration:t}){postSchema({objects:{Similarity:{displayName:"Similarity",description:"Determine the similarity of 2 strings using different algorithms.",properties:{FirstString:{displayName:"String A",type:"string"},SecondString:{displayName:"String B",type:"string"},Similarity:{displayName:"Similarity",type:"decimal"}},methods:{LevenshteinAlgorithm:{displayName:"Levenshtein Algorithm",type:"read",inputs:["FirstString","SecondString"],requiredInputs:["FirstString","SecondString"],outputs:["Similarity"]}}}}})},onexecute=async function({objectName:t,methodName:i,parameters:e,properties:r,configuration:n,schema:a}){switch(t){case"Similarity":await async function(t,i,e){switch(t){case"LevenshteinAlgorithm":await function(t){return new Promise((i,e)=>{let r=t.FirstString.toString(),n=t.SecondString.toString(),a=r,s=n;r.length<n.length&&(a=n,s=r);let o=a.length;if(0==o)return 1;let l=(o-function(t,i){t=t.toLowerCase(),i=i.toLowerCase();for(var e=new Array,r=0;r<=t.length;r++){for(var n=r,a=0;a<=i.length;a++)if(0==r)e[a]=a;else if(a>0){var s=e[a-1];t.charAt(r-1)!=i.charAt(a-1)&&(s=Math.min(Math.min(s,n),e[a])+1),e[a-1]=n,n=s}r>0&&(e[i.length]=n)}return e[i.length]}(a,s))/parseFloat(o.toString());postResult({Similarity:l}),i()})}(i);break;default:throw new Error("The method "+t+" is not supported.")}}(i,r);break;default:throw new Error("The object "+t+" is not supported.")}};
//# sourceMappingURL=index.js.map
